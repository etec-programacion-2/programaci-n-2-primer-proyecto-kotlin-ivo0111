/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

class App {
    val greeting: String
        get() {
            return "Hello World!"
        }
}

fun main() {
    val numero: Int = 24
    val numeroParaFactorizar: Int = 5
    val base: Int = 3
    val exponente: Int = 3 
    println("Â¡Hola, Kotlin!")
    data()
    mostrarTiposDeDatos()
    calcularAreaRectangulo(305.2, 25.1)
    if (esPar(numero)) {
        println("$numero es par")
    } else {
        println("$numero es impar")
    }
    val signo: String = signo(numero)
    println("$numero es $signo")
    mostrarNumerosConLoops()
    mostrarNumerosParesConLoops()
    println("\nEl factorial de $numeroParaFactorizar es ${factorial(numeroParaFactorizar)}")
    println("\n$base elevado a $exponente es ${potencia(base, exponente)}")
}

fun data() {
    val nombre = "Ivo" 
    val fecha = "22/04/2025" 
    println("nombre: ${nombre}")
    println("fecha: ${fecha}")
}

fun mostrarTiposDeDatos() {
    val cadena: String = "Esto es una cadena"
    val entero: Int = 25
    val decimal: Double = 1.75
    val booleano: Boolean = true
    
    println("String: $cadena")
    println("int: $entero")
    println("double: $decimal")
    println("booleano: $booleano")
}

fun calcularAreaRectangulo(base: Double, altura: Double){
    val area = base * altura 
    println("Area: $area")
}

fun esPar(numero: Int): Boolean {
    return when {
        numero % 2 == 0 -> true
        else -> false
    }
}

fun signo(numero: Int): String{
    return when{
        numero < 0 -> "Negativo"
        numero > 0 -> "Positivo"
        else -> "Cero"
    }
}

fun mostrarNumerosConLoops() {
    // Usando for
    println("Usando for:")
    for (i in 1..10) {
        println(i)
    }
    
    // Usando while
    println("\nUsando while:")
    var j = 1
    while (j <= 10) {
        println(j)
        j++
    }
    
    // Usando do-while
    println("\nUsando do-while:")
    var k = 1
    do {
        println(k)
        k++
    } while (k <= 10)
}

fun mostrarNumerosParesConLoops() {
    // Usando for
    println("Numeros pares del 2 al 20:")
    println("\nUsando for:")
    for (i in 2..20) {
        if (i % 2 === 0) println(i)
    }
    
    // Usando while
    println("\nUsando while:")
    var j = 2
    while (j <= 20) {
        if (j % 2 === 0) println(j)
        j++
    }
    
    // Usando do-while
    println("\nUsando do-while:")
    var k = 2
    do {
        if (k % 2 === 0) println(k)
        k++
    } while (k <= 20)
}

fun factorial(n: Int): Int {
    return if (n <= 1) 1 else n * factorial(n - 1)
}

fun saludar(receptor: String = "Quinteros", emisor: String = "Ivo") {
    println("Hola $receptor, soy $emisor, ya casi estamos llegando al final de mi tarea")
}

fun potencia(base: Int, exponente: Int):Int{
    var resultado: Int = 1
    for (i in 1..exponente){
        resultado = resultado * base
    }
    return resultado
}